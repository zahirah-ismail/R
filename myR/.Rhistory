if(i%%2 ==0){
print(i)
}
}
for(i in seq(2,20,2)){
if(i%%2 ==0){
print(i)
}
if(i > 10){
break
}
}
for(i in seq(2,20,2)){
if(i > 10){
break
}
if(i%%2 ==0){
print(i)
}
}
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- (17,18,19,20,21)
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- c(17,18,19,20,21)
class(a)
y <- data.frame(a,b,c,d,e)
y
stack(y) -> y1
y1
unstack(y1)
cy <- cbind(y,y,y,y,y)
cy
cy2 <- rbind(y,y,y,y,y)
cy2
class(ry)
class(cy2)
fix(cy2)
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
q()
utils:::menuInstallLocal()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
a<- 2
a <- 2
a
a <- 2
b <- 3
c <-12
d <- a + b + c
d
rm()
d <- a + b + c
a <- 2
b <- 3
c <-12
d <- a + b + c
sqrt(16)
log(100)
a <- c(1,2,3,4,5,"abc","ll12")
a
length(a)
a[5]
a[5:7]
a[5;length(a)]
a[5:length(a)]
a[1,3,length(a)]
a[c[1,3,length(a)]]
a[c[1,3,length(a)]
a[c(1,3,length(a))]
vec1 <- c(1,3,length(a))
vec1
a[vec1]
getwd()
e <- seq(5 , by = 2 , length = 50)
e
rep(5, 10)
rep("hello" , 10)
rep(1:4,each = 3)
rep(1:4,each = 3, times = 2)
rep(1:4 , 1:4)
rep(1:4 , 1:4)
a <- runif(10)
a
a <- a*10
a
a <-round(a)
a
names(a) <- c(1:10)
a
x <- c(1,2,3,4,5)
x
x[2] <-NA
x
is.na(x)
!is.na(x)
na.omit(x)
x == NA
x == "NA"
x <- c(1:11)
x
min(x)
max(x)
median(x)
x <- x[-c(5,6)]
x
which (x > 5)
x > 5
x[which(x == min(x)]
x[which(x == min(x))]
x [which ((x>7) | (x<2))
x
x [which ((x>7) | (x<2))]
int.vec <- c(1:6)
class(int.vec)
int.vec
as.numeric(int.vec)
as.numeric(int.vec) -> int.vec
class(int.vec)
as.character(int:vec)
as.character(int.vec)
vec1 <- c("f", 2)
class(vec)
class(vec1)
a <- c(1:6)
b <- c(5:10)
1 %in% a
10 % a
10 %in% a
a %in% b
is.element(a,b)
sample(a)
sample(a)
sample(a)
sample(a)
set.seed(10)
sample(a)
sample(a)
sample(a)
sample(a)
set.seed(10)
sample(a)
sample(a)
sample(a, replace =T)
c <- sample(a,40, replace = T)
c
d <- sort(c)
d
sort(c, decreasing = T)
rev(sort(c))
g <- c[order(c)]
g
a <- 2
b <-10
c <- c(1:4)
any(c > b)
any (c > a)
if(a < b){
print ("i like mangos")
}
if(a > b){
print ("i like mangos")
}else{
print("its shows else")
}
ifelse(a>b , print ("i like mangos"),print("its shows else"))
ifelse(a>b , println ("i like mangos"), println("its shows else"))
for(i in seq(1,20,2)){
if(i%%2 ==0){
print(i)
}
}
for(i in seq(2,20,2)){
if(i%%2 ==0){
print(i)
}
}
for(i in seq(2,20,2)){
if(i%%2 ==0){
print(i)
}
if(i > 10){
break
}
}
for(i in seq(2,20,2)){
if(i > 10){
break
}
if(i%%2 ==0){
print(i)
}
}
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- (17,18,19,20,21)
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- c(17,18,19,20,21)
class(a)
y <- data.frame(a,b,c,d,e)
y
stack(y) -> y1
y1
unstack(y1)
cy <- cbind(y,y,y,y,y)
cy
cy2 <- rbind(y,y,y,y,y)
cy2
class(ry)
class(cy2)
fix(cy2)
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
utils:::menuInstallLocal()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
a<- 2
a <- 2
a
a <- 2
b <- 3
c <-12
d <- a + b + c
d
rm()
d <- a + b + c
a <- 2
b <- 3
c <-12
d <- a + b + c
sqrt(16)
log(100)
a <- c(1,2,3,4,5,"abc","ll12")
a
length(a)
a[5]
a[5:7]
a[5;length(a)]
a[5:length(a)]
a[1,3,length(a)]
a[c[1,3,length(a)]]
a[c[1,3,length(a)]
a[c(1,3,length(a))]
vec1 <- c(1,3,length(a))
vec1
a[vec1]
getwd()
e <- seq(5 , by = 2 , length = 50)
e
rep(5, 10)
rep("hello" , 10)
rep(1:4,each = 3)
rep(1:4,each = 3, times = 2)
rep(1:4 , 1:4)
rep(1:4 , 1:4)
a <- runif(10)
a
a <- a*10
a
a <-round(a)
a
names(a) <- c(1:10)
a
x <- c(1,2,3,4,5)
x
x[2] <-NA
x
is.na(x)
!is.na(x)
na.omit(x)
x == NA
x == "NA"
x <- c(1:11)
x
min(x)
max(x)
median(x)
x <- x[-c(5,6)]
x
which (x > 5)
x > 5
x[which(x == min(x)]
x[which(x == min(x))]
x [which ((x>7) | (x<2))
x
x [which ((x>7) | (x<2))]
int.vec <- c(1:6)
class(int.vec)
int.vec
as.numeric(int.vec)
as.numeric(int.vec) -> int.vec
class(int.vec)
as.character(int:vec)
as.character(int.vec)
vec1 <- c("f", 2)
class(vec)
class(vec1)
a <- c(1:6)
b <- c(5:10)
1 %in% a
10 % a
10 %in% a
a %in% b
is.element(a,b)
sample(a)
sample(a)
sample(a)
sample(a)
set.seed(10)
sample(a)
sample(a)
sample(a)
sample(a)
set.seed(10)
sample(a)
sample(a)
sample(a, replace =T)
c <- sample(a,40, replace = T)
c
d <- sort(c)
d
sort(c, decreasing = T)
rev(sort(c))
g <- c[order(c)]
g
a <- 2
b <-10
c <- c(1:4)
any(c > b)
any (c > a)
if(a < b){
print ("i like mangos")
}
if(a > b){
print ("i like mangos")
}else{
print("its shows else")
}
ifelse(a>b , print ("i like mangos"),print("its shows else"))
ifelse(a>b , println ("i like mangos"), println("its shows else"))
for(i in seq(1,20,2)){
if(i%%2 ==0){
print(i)
}
}
for(i in seq(2,20,2)){
if(i%%2 ==0){
print(i)
}
}
for(i in seq(2,20,2)){
if(i%%2 ==0){
print(i)
}
if(i > 10){
break
}
}
for(i in seq(2,20,2)){
if(i > 10){
break
}
if(i%%2 ==0){
print(i)
}
}
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- (17,18,19,20,21)
a <- c(1,2,3,4,NA)
b <- c(5,6,7,NA,8)
c <- c(9,10,NA,11,12)
d <- c(13,NA,14,15,16)
e <- c(17,18,19,20,21)
class(a)
y <- data.frame(a,b,c,d,e)
y
stack(y) -> y1
y1
unstack(y1)
cy <- cbind(y,y,y,y,y)
cy
cy2 <- rbind(y,y,y,y,y)
cy2
class(ry)
class(cy2)
fix(cy2)
fix(cy2)
q()
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
class(a)
y <- data.frame(a,b,c,d,e)
y
stack(y) -> y1
y1
unstack(y1)
cy <- cbind(y,y,y,y,y)
cy
cy2 <- rbind(y,y,y,y,y)
cy2
class(ry)
class(cy2)
fix(cy2)
ryt <- t(cy2)
fix(ryt)
fix(ryt)
class(ryt)
as.data.frame(ryt) -> ryt
class(ryt)
head(ryt)
head(ry)
head(ry, 20)
head (cy2, 20)
na.omit(cy2)
cy2[1,]
ry[c(2:20),]
cy2[c(2:20),]
cy2[!is.na(ry$a),]
cy2[!is.na(cy2$a),]
!is.na(cy2$a)
cy2[which(cy2$a >1),]
cy2[which(cy2$a >1 & cy2[,2] < 7),]
attach(cy2)
q()
set.seed(100)
rpois(100,6)
set.seed(100)
range(rpois(100,6))
set.seed(100)
range(rpois(100,6))
range(rpois(100,6)[1)
range(rpois(100,6))[1]
range(rpois(100,6))[1] : range(rpois(100,6))[2]
set.seed(100)
cut(rpois(100,6) , range(rpois(100,6)) [1] :range(rpois (100,6))[2])
cut(rpois(100,6), pretty(rpois(100,6)))
pretty(rpois(100,6)
pretty(rpois(1000,50),15)
pretty (rpois(100,6))
q()
USArrests
table(USArrests(,3))
table(USArrests[,3])
table (cut(USArrests[,3],pretty(USArrests[,3])))
table (cut(USArrests[,3],pretty(USArrests[,3] , 4)))
table(USArrests[,3], USArrests[,2]
table(USArrests[,3], USArrests[,2])
table(USArrests[,3],USArrests[,2])
airquality
table(airquality[,4] ,airquality[,5])
table(cut(airquality[,4], pretty(airquality[,4])),airquality[,5])
table(cut(airquality[,4], pretty(airquality[,4])),airquality[,5]) -> a
prop.table(a)
prop.table(a,1)
prop.table(a,2)
setwd("C:/Users/zahirah/documents/myR")
getwd()
read.csv("exported_pipe.csv") -> a
read.csv("exported pipe.csv") -> a
read.csv("exported pipe.txt") -> a
a
class(a)
write.csv(a ,"export file.csv")
read.table("exported pipe.txt") -> b
b
read.table("exported pipe.txt", fill = T, header = F) -> b
b
prop.table(a,1)
read.table("exported pipe.txt", fill = T, header = F,colClasses = c("character","character","character","character","character"))
read.table("exported pipe.txt", fill = T, header = F,colClasses = c("character","character","character","character")
read.table("exported pipe.txt", fill = T, header = F,colClasses = c("character","character","character","character"))
read.table("exported pipe.txt", fill = T, header = F,colClasses = c("character", "character", "character", "character")) -> s
library(datasets)
library(help = datasets)
?USArrets
?USArrests
fix(USAarrests)
fix(USArrests)
summary(USArrests)
fivenum(USArrests)
fivenum(USArrests)
str(USArrests)
colnames(USArrests)
rownames(USArrests)
colnames(USArrests) <- c("Murders", "Assaults", "UrbanPopulation", "Rapes")
colnames(USArrests)
fix(USArrests)
nrow(USArrests)
ncol(USArrests)
USArrests[1,1]
head(USArrests)
tail(USArrests)
USArrests[,c[1,2]]
USArrests[,c(1,2)]
USArrests[,c[1,2]]
USA[,c(1,2)]
USArrests[,c(1,2)]
q()
